[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

[project]
name = "botris-interface"
dynamic = ["version"]
description = "A performant library designed for creating and managing bots in a tetris-like game environment. This library offers various tools and features to build, test, and deploy bots efficiently to Botris."
readme = "README.md"
license = {text = "MIT License"}
requires-python = ">=3.10,<4.0"
authors = [
    { name = "Nathanael Lu", email = "info@lunathanael.dev" },
]
maintainers = [
    { name = "Nathanael Lu", email = "info@lunathanael.dev" },
]
dependencies = [
    "colorama>=0.4.6,<0.5.0",
    "pillow>=10.4.0,<11.0.0",
    "protobuf>=5.27.3,<6.0.0",
    "pydantic>=2.8.2,<3.0.0",
    "websockets>=12.0,<13.0",
    "nanobind>=2.1.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "isort>=5.13.2,<6.0.0",
    "build>=1.2.1,<2.0.0",
    "packaging>=24.1,<25.0",
    "typing-extensions>=4.12.2,<5.0.0",
]

[project.urls]
Homepage = "https://github.com/lunathanael/botris-interface"
Issues = "https://github.com/lunathanael/botris-interface/issues"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/botris/_version.py"]

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

wheel.packages = ["src/botris"]
wheel.install-dir = "botris"

[tool.setuptools_scm]
write_to = "src/botris/_version.py"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

manylinux-x86_64-image = "quay.io/pypa/manylinux_2_28_x86_64:latest"
manylinux-aarch64-image = "quay.io/pypa/manylinux_2_28_aarch64:latest"
manylinux-ppc64le-image = "quay.io/pypa/manylinux_2_28_ppc64le:latest"
manylinux-s390x-image = "quay.io/pypa/manylinux_2_28_s390x:latest"
manylinux-pypy_x86_64-image = "quay.io/pypa/manylinux_2_28_x86_64:latest"
manylinux-pypy_aarch64-image = "quay.io/pypa/manylinux_2_28_aarch64:latest"

musllinux-x86_64-image = "quay.io/pypa/musllinux_1_2_x86_64:latest"
musllinux-i686-image = "quay.io/pypa/musllinux_1_2_i686:latest"
musllinux-aarch64-image = "quay.io/pypa/musllinux_1_2_aarch64:latest"
musllinux-ppc64le-image = "quay.io/pypa/musllinux_1_2_ppc64le:latest"
musllinux-s390x-image = "quay.io/pypa/musllinux_1_2_s390x:latest"

# skip incompatible many_linux images, GCC<12
skip = [
    "*_i686",
]


# run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"